{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/RoomleButton.ts","src/scripts/config/Environment.ts","src/scripts/config/Environments.ts","src/scripts/controllers/Controllers.ts","src/scripts/controllers/PopupController.ts","src/scripts/controllers/RoomleController.ts","src/scripts/lib/Controller.ts","src/scripts/lib/Service.ts","src/scripts/main.ts","src/scripts/services/ButtonsService.ts","src/scripts/services/ConsoleService.ts","src/scripts/services/DomBuilderService.ts","src/scripts/services/EventHandlerService.ts","src/scripts/services/IconsService.ts","src/scripts/services/ImagesService.ts","src/scripts/services/MobileDetectService.ts","src/scripts/services/MobileRedirectService.ts","src/scripts/services/PolyfillService.ts","src/scripts/services/RequestService.ts","src/scripts/services/RoomleTypeService.ts","src/scripts/services/SettingsService.ts","src/scripts/utils/EnumEx.ts"],"names":[],"mappings":"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","file":"roomle-button.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import * as controllers from './controllers/Controllers';\nimport {SettingsService, RoomleButtonSettings} from './services/SettingsService';\nimport {EventHandlerService} from './services/EventHandlerService';\nimport {BUTTON_TYPE, ButtonsService} from './services/ButtonsService';\nimport {DomBuilderService} from './services/DomBuilderService';\nimport {PolyfillService} from './services/PolyfillService';\nimport {MobileRedirectService} from './services/MobileRedirectService';\nimport {MobileDetectService} from './services/MobileDetectService';\nimport {RoomleTypeService} from './services/RoomleTypeService';\nimport {ImagesService} from './services/ImagesService';\n\nexport class RoomleButton {\n    private static _instance: RoomleButton;\n\n    private domBuilder: DomBuilderService = <DomBuilderService>DomBuilderService.inject();\n    private imagesService: ImagesService = <ImagesService>ImagesService.inject();\n    private eventHandler: EventHandlerService = <EventHandlerService>EventHandlerService.inject();\n    private polyfillService: PolyfillService = <PolyfillService>PolyfillService.inject();\n    private mobileRedirectService: MobileRedirectService = <MobileRedirectService>MobileRedirectService.inject();\n    private mobileDetectService: MobileDetectService = <MobileDetectService>MobileDetectService.inject();\n\n    constructor(settings: RoomleButtonSettings) {\n        SettingsService.init(settings);\n        this.imagesService.preloadImages();\n        this._addCSS();\n        this._boot();\n    };\n\n    private _addCSS() {\n        const scriptId = 'rml-button-lib';\n\n        const script = <HTMLElement>document.getElementById(scriptId);\n        if (!script) {\n            return;\n        }\n        let head = document.head || document.getElementsByTagName('head')[0];\n        const href = script.getAttribute('src');\n        let styleHref = href.replace(/\\.js/g, '.css');\n        if (styleHref && styleHref.length > 1 && styleHref[0] === 'j' && styleHref[1] === 's') {\n            styleHref = styleHref.substr(2);\n            styleHref = 'css' + styleHref;\n        } else {\n            styleHref = styleHref.replace(/\\/js\\//g, '/css/');\n        }\n\n        let style = document.createElement('link');\n\n        //style.async = true;\n        style.href = styleHref;\n        style.rel = 'stylesheet';\n        style.media = 'all';\n        style.setAttribute('integrity', '###sricheck###');\n        head.appendChild(style);\n    }\n\n    private _setupClickListener(container: HTMLElement) {\n        container.addEventListener('click', (e) => this.eventHandler.handle(e));\n    }\n\n    private _boot() {\n        let controllerClasses: any = controllers;\n        let element = document.body;\n        this.domBuilder.addCSS();\n        if (SettingsService.settings.container) {\n            const elementList = document.body.querySelectorAll(SettingsService.settings.container);\n            if (elementList.length) {\n                element = <HTMLElement>elementList[0];\n            }\n        }\n\n        if (SettingsService.settings.createPopUp) {\n            this.domBuilder.buildPopUp(element);\n        }\n\n        this._setupClickListener(element);\n        const instanceSelector = SettingsService.settings.selector; // ? this.settings.selector : '[data-roomle-id]';\n        for (let key in controllerClasses) {\n            if (controllerClasses.hasOwnProperty(key)) {\n                if (key === 'RoomleController' && SettingsService.settings.mode === 'lib') {\n                    continue;\n                }\n                let controllerClass: any = controllerClasses[key];\n                if (typeof controllerClass.parse === 'function') {\n                    controllerClass.parse(instanceSelector, element);\n                }\n            }\n        }\n    }\n\n    public openCustomPopUp(e: Event, content: HTMLElement, parent?: HTMLElement) {\n        this.domBuilder.buildCustomPopUp(content, parent);\n        setTimeout(() => {\n            this.eventHandler.dispatchOpenPopUp(e)\n        }, 1);\n    }\n\n    public dispatchClick(e: Event, type: string, id: string, buttonType: string, highlight: string = null) {\n        this.eventHandler.dispatch(e, type, id, ButtonsService.convertButtonTypeToEnum(buttonType), highlight);\n    }\n\n    public getDomLinkFor(action: string, id: string, type: string, isHighlighted: boolean = false): Element {\n        const roomleType = RoomleTypeService.convertTypeToEnum(type);\n        const buttonType = ButtonsService.convertButtonTypeToEnum(action);\n        const link = this.mobileDetectService.generateLink(id, roomleType, buttonType);\n        const buildOptions = {isHighlighted: isHighlighted, buildAnyway: true};\n        return this.domBuilder.buildLink(link, buildOptions);\n    }\n\n    public appendButtons(container: Element, id: string, type: string) {\n        let links = this.getLinks(id, type);\n        links.forEach((link) => {\n            container.appendChild(this.domBuilder.buildLink(link));\n        });\n    }\n\n    public execDeeplink(id: string, type: string, clickedButton: string, newWindow: boolean = false, callback: Function = null) {\n        const roomleType = RoomleTypeService.convertTypeToEnum(type);\n        const buttonType = ButtonsService.convertButtonTypeToEnum(clickedButton);\n        const link = this.mobileDetectService.generateLink(id, roomleType, buttonType);\n        if (link.alternate) {\n            let event = document.createEvent('Event');\n            event.initEvent('execDeeplink', true, true);\n            this.eventHandler.dispatch(event, type, id, BUTTON_TYPE.TRIGGER, clickedButton, newWindow);\n        } else {\n            this.mobileRedirectService.redirect(link, newWindow, callback);\n        }\n    }\n\n    public getLinks(id: string, type: string, callbackUrl: string = null) {\n        return this.mobileDetectService.getLinks(id, RoomleTypeService.convertTypeToEnum(type), callbackUrl);\n    }\n\n    public static getInstance(settings: RoomleButtonSettings): RoomleButton {\n        if (!(this._instance instanceof RoomleButton)) {\n            this._instance = new this(settings);\n        }\n\n        if (!(<any>window).RoomleButtonInstance) {\n            const rmlObject = Object.getPrototypeOf(this._instance);\n            let exposedObject: {[key: string]: ()=>any} = {};\n            for (const key in rmlObject) {\n                if (key && rmlObject.hasOwnProperty(key) && key[0] !== '_') {\n                    exposedObject[key] = rmlObject[key];\n                }\n            }\n            (<any>window).RoomleButtonInstance = exposedObject;\n            SettingsService.settings.callback.booted();\n        }\n        return this._instance;\n    }\n\n}\n","import {Environments} from './Environments';\n\nexport class Environment {\n\n    static envIndicator = '###development###';\n\n    static settings() {\n        let settings = {\n            rapi: 'api.test.roomle.com/v2',\n            protocol: 'https://',\n            rmlco: '',\n            shortlink(type:string, id:string, button:string, shortId:string = null) {\n                if (Environment.env !== Environments.TEST && !!shortId) {\n                    return 'http://rml.co/' + shortId + '/' + button;\n                }\n                return window.location.host + '/deeplink?id=' + id + '&type=' + type + '&button=' + button;\n            }\n        };\n\n        if (Environment.env !== Environments.TEST) {\n            settings.rapi = 'api.roomle.com/v2';\n        }\n\n        settings.rmlco = settings.protocol + settings.rapi + '/shortIds';\n        return settings;\n    }\n\n    static get env():string {\n        return this.envIndicator.substring(3, this.envIndicator.length - 3);\n    }\n\n    static get config() {\n        return Environment.settings();\n    }\n}\n","export class Environments {\n    static PRODUCTION = 'production';\n    static TEST = 'test';\n}\n","export { RoomleController } from './RoomleController';\nexport { PopupController } from './PopupController';\n\n","import { Controller } from '../lib/Controller';\nimport {SettingsService} from '../services/SettingsService';\nimport {EventHandlerService, EVENT_TYPES} from '../services/EventHandlerService';\nimport {DomBuilderService} from '../services/DomBuilderService';\nimport {DeepLink} from '../services/MobileDetectService';\nimport {ButtonsService, BUTTON_TYPE} from '../services/ButtonsService';\nimport {ImagesService} from '../services/ImagesService';\n\nexport class PopupController extends Controller {\n    static selector:string = '[data-rml-deeplink-popup-container]';\n    private eventHandlerService:EventHandlerService = <EventHandlerService>EventHandlerService.inject();\n    private domBuilderService:DomBuilderService = <DomBuilderService>DomBuilderService.inject();\n    private imagesService:ImagesService = <ImagesService>ImagesService.inject();\n\n    private id:string;\n    private type:string;\n\n    private closePopup() {\n        let classList = this.$('.rml-popup')[0].classList;\n        if (classList.contains('rml-md-show')) {\n            classList.remove('rml-md-show');\n            const back = this.$('.rml-popup--back')[0];\n            back.classList.remove('rml-popup--back__show');\n            this.unfreezeScrolling();\n            if (typeof SettingsService.settings.callback.popupClose === 'function') {\n                const id = (this.id) ? this.id : 'CUSTOM';\n                const type = (this.type) ? this.type : 'CUSTOM';\n                SettingsService.settings.callback.popupClose(id, type);\n            }\n        } else {\n            classList.add('rml-md-show');\n            this.freezeScrolling();\n        }\n\n    }\n\n    constructor(element:HTMLElement) {\n        super(element);\n        if (!SettingsService.settings.createPopUp) {\n            return;\n        }\n        this.eventHandlerService.subscribe(EVENT_TYPES.TRIGGER, this.openPopup.bind(this));\n        this.eventHandlerService.subscribe(EVENT_TYPES.POP_UP_OPEN, this.simpleOpen.bind(this));\n        this.eventHandlerService.subscribe(EVENT_TYPES.POP_UP_CLOSE, this.closePopup.bind(this));\n        this.$('.rml-md-overlay')[0].addEventListener('click', ()=> this.closePopup());\n        this.$('.rml-popup--close')[0].addEventListener('click', ()=> this.closePopup());\n        if (SettingsService.settings.showBackButton) {\n            this.$('.rml-popup--back')[0].addEventListener('click', ()=> this.back());\n        } else {\n            this.$('.rml-popup--back')[0].classList.add('rml-popup--back__hide');\n        }\n        //this.roomleButtonService.addRoomleButton(this.triggerClicked.bind(this));\n    }\n\n    private back() {\n        let linksContainer = this.$('.rml-deeplink--slider')[0];\n        linksContainer.classList.remove('rml-deeplink__hint');\n        let hintContainer = this.$('.rml-deeplink__hint-container')[0];\n        hintContainer.innerHTML = '';\n        const back = this.$('.rml-popup--back')[0];\n        back.classList.remove('rml-popup--back__show');\n        const hintText = this.$('.rml-deeplink--hint');\n        if (hintText.length) {\n            const text = hintText[0];\n            text.classList.remove('rml-hint__show');\n        }\n    }\n\n    private simpleOpen(e:Event, id:string, type:string):Element {\n        e.preventDefault();\n        this.id = id;\n        this.type = type;\n        var popUp = document.querySelectorAll('[' + SettingsService.settings.popUpSelector + ']');\n        let modal = popUp[0].querySelectorAll('.rml-md-modal');\n        if (modal[0].classList.contains('rml-md-show')) {\n            modal[0].classList.remove('rml-md-show');\n        } else {\n            modal[0].classList.add('rml-md-show');\n        }\n        this.freezeScrolling();\n        if (typeof SettingsService.settings.callback.popupOpen === 'function') {\n            SettingsService.settings.callback.popupOpen((id) ? id : 'CUSTOM', (type) ? type : 'CUSTOM');\n        }\n\n        return modal[0];\n    }\n\n    public openPopup(e:Event, id:string, type:string, links:Array<DeepLink>, highlight:string) {\n        const modal = this.simpleOpen(e, id, type);\n        let container = modal.querySelectorAll('.rml-generated-content');\n        container[0].innerHTML = '';\n        let linksContainer = document.createElement('div');\n        linksContainer.classList.add('rml-deeplink--slider');\n        linksContainer.classList.add('rml-deeplink--links');\n\n        let slide = document.createElement('div');\n        slide.classList.add('rml-deeplink--slide');\n        slide.classList.add('rml-deeplink--overview');\n        let alternate = document.createElement('div');\n        alternate.classList.add('rml-deeplink--slide');\n        alternate.classList.add('rml-deeplink--alternate');\n        links.forEach((link)=> {\n            const isHighlighted = link.type === highlight;\n            const linkDom = this.domBuilderService.buildLink(link, {\n                isHighlighted: isHighlighted,\n                slideMode: true,\n                clickedHint: ()=> {\n                    alternate.innerHTML = '';\n                    const hintContainer = document.createElement('div');\n                    hintContainer.classList.add('rml-deeplink__hint-container');\n                    const imgContainer = document.createElement('div');\n                    const dom = document.createElement('div');\n                    imgContainer.classList.add('rml-deeplink__hint-img');\n                    dom.classList.add('rml-deeplink__hint-link');\n                    const img = document.createElement('img');\n                    const imgUrl = this.imagesService.images[link.alternate];\n                    img.setAttribute('src', imgUrl);\n                    imgContainer.appendChild(img);\n                    hintContainer.appendChild(imgContainer);\n                    const back = document.querySelector('.rml-popup--back');\n                    if (SettingsService.settings.showBackButton) {\n                        back.classList.add('rml-popup--back__show');\n                    }\n                    const domLink = <Element>linkDom.cloneNode(true);\n                    dom.appendChild(domLink);\n                    this.domBuilderService.addShortlink(dom, link.roomleType, link.type, link.id);\n                    hintContainer.appendChild(dom);\n                    alternate.appendChild(hintContainer);\n                    if (linksContainer.classList.contains('rml-deeplink__hint')) {\n                        linksContainer.classList.remove('rml-deeplink__hint');\n                    } else {\n                        linksContainer.classList.add('rml-deeplink__hint');\n                    }\n                    const hint = dom.querySelector('.rml-deeplink--hint');\n                    this.domBuilderService.addShortlink(dom, link.roomleType, link.type, link.id);\n                    hint.classList.add('rml-hint__show');\n                    const newlinkDom = alternate.querySelector('.rml-deeplink--row');\n                    newlinkDom.addEventListener('click', (e:Event)=> {\n                        e.preventDefault();\n                        const input = <HTMLInputElement>dom.querySelector('input');\n                        input.select();\n                        return false;\n                    });\n                    if (typeof SettingsService.settings.callback.clickedHint === 'function') {\n                        SettingsService.settings.callback.clickedHint(link.id, link.roomleType, link.type);\n                    }\n                }\n            });\n            if (!linkDom) {\n                return;\n            }\n            slide.appendChild(linkDom);\n        });\n\n        linksContainer.appendChild(slide);\n        linksContainer.appendChild(alternate);\n        container[0].appendChild(linksContainer);\n    }\n\n    private freezeScrolling() {\n        let html = <HTMLElement>document.querySelector('html');\n        let body = document.body;\n        if (html.style.position !== 'fixed') {\n            const top = html.scrollTop ? html.scrollTop : body.scrollTop;\n            if (window.innerWidth > html.offsetWidth) {\n                html.style.overflowY = 'scroll';\n            }\n            html.style.width = '100%';\n            html.style.height = '100%';\n            html.style.position = 'fixed';\n            html.style.top = (-top) + 'px';\n        }\n    }\n\n    private unfreezeScrolling() {\n        let html = <HTMLElement>document.querySelector('html');\n        let body = document.body;\n        if (html.style.position === 'fixed') {\n            html.style.position = 'static';\n            const scrollTopValue = -parseInt(html.style.top, 10);\n            html.scrollTop = scrollTopValue;\n            body.scrollTop = scrollTopValue;\n            html.style.position = '';\n            html.style.width = '';\n            html.style.height = '';\n            html.style.top = '';\n            html.style.overflowY = '';\n        }\n    }\n}\n\n\n","import { Controller } from '../lib/Controller';\nimport { DomBuilderService } from '../services/DomBuilderService';\nimport { EventHandlerService } from '../services/EventHandlerService';\nimport {ROOMLE_TYPE,RoomleTypeService} from '../services/RoomleTypeService';\nimport {SettingsService} from '../services/SettingsService';\n\nexport interface IRoomleType {\n    item: ROOMLE_TYPE,\n    configuration: ROOMLE_TYPE,\n    plan: ROOMLE_TYPE,\n}\n\nexport class RoomleController extends Controller {\n\n    private id:string = null;\n    private type:ROOMLE_TYPE = null;\n    private template:string;\n\n    private domBuilder = <DomBuilderService>DomBuilderService.inject();\n\n    private addButtons(type:ROOMLE_TYPE) {\n        if (SettingsService.settings.createNoButtons) {\n            return;\n        }\n        let item = this.$();\n        if (!item) {\n            return;\n        }\n        let buttons = this.domBuilder.getButtons(type);\n        item.appendChild(buttons);\n    }\n\n    constructor(element:Element) {\n        super(element);\n        if (element) {\n            const idSelector = SettingsService.settings.dataSelector.id;\n            const typeSelector = SettingsService.settings.dataSelector.type;\n            this.id = element.getAttribute(idSelector);\n            this.type = RoomleTypeService.convertTypeToEnum(element.getAttribute(typeSelector));\n            if (this.type !== null && this.id) {\n                this.addButtons(this.type);\n            }\n        }\n    }\n\n}\n","/**\n * Generic controller class to entcapsulate the parsing\n * and other generic stuff\n *\n * @export\n * @class Controller\n */\nexport class Controller {\n\n    /**\n     * Selector which will be overwritten from the\n     * other Controllers so the parse function\n     * can directly query according to that selector.\n     *\n     * @static\n     * @type {string}\n     */\n    static selector:string;\n\n    /**\n     * Instances of the Controller\n     *\n     * @static\n     * @type {Array<Controller>}\n     */\n    static _instances:Array<Controller> = [];\n\n    /**\n     * HTML attribute to mark elements which are already parsed\n     *\n     * @static\n     */\n    static PARSE_ID_ATTRIBUTE = 'data-parse-id';\n\n    /**\n     * Element where the instance is applied\n     *\n     * @private\n     * @type {Element}\n     */\n    private _element:Element;\n\n    /**\n     * Access element or query by selector\n     */\n    $():HTMLElement;\n    $(selector:string):NodeListOf<HTMLElement>;\n    $(selector?:string):HTMLElement | NodeListOf<HTMLElement> {\n        if (!(this._element instanceof Element)) {\n            throw new Error('This controller has no element!');\n        }\n        return selector ? <NodeListOf<HTMLElement>>this._element.querySelectorAll(selector) : <HTMLElement>this._element;\n    }\n\n\n    /**\n     * Creates an instance of a Controller.\n     *\n     * @param {Element} root The element where the controller has been applied\n     */\n    constructor(element:Element) {\n        this._element = element;\n    }\n\n    getControllersByClass(controllerClass:Function):Array<Controller> {\n        const instances:Array<Controller> = Controller._instances;\n        const result:Array<Controller> = [];\n        for (let i = 0, max = instances.length; i < max; i++) {\n            let instance = instances[i];\n            if (instance instanceof controllerClass) {\n                result.push(instance);\n            }\n        }\n        return result;\n    }\n\n    /**\n     * Hook for running code before the controller is instantiated\n     *\n     * @static\n     * @param {NodeListOf<Element>} elements List of elements where the controller will be applied\n     */\n    static beforeInstantiating(elements:NodeListOf<Element>):void {\n    }\n\n    /**\n     * Hook for running code after the controller has been instantiated.\n     *\n     * @static\n     * @param {NodeListOf<Element>} elements List of elements where the controller has been applied\n     * @param {Array<Controller>} instances List of controller instances created\n     */\n    static afterInstantiating(elements:NodeListOf<Element>, instances:Array<Controller>):void {\n    }\n\n    /**\n     * Look for elements with a specific selector and creates an instance for\n     * every element.\n     *\n     * @static\n     * @param {string} selector Dom selector\n     * @param {Element} [root=document.body] Starting element for parsing\n     */\n    static parse(selector?:string, root:Element = document.body):void {\n        if (typeof this.selector === 'string' && this.selector.length) {\n            selector = this.selector;\n        } else if (!selector) {\n            return;\n        }\n        const elements:NodeListOf<Element> = root.querySelectorAll(selector);\n        this.beforeInstantiating(elements);\n\n        for (let i = 0; i < elements.length; i++) {\n            let element:Element = elements[i];\n            let className = /^function\\s+([\\w\\$]+)\\s*\\(/.exec(this.toString())[1];\n            className = className.toLocaleLowerCase();\n            if (element.getAttribute(Controller.PARSE_ID_ATTRIBUTE + '-' + className)) {\n                continue;\n            }\n            element.setAttribute(Controller.PARSE_ID_ATTRIBUTE + '-' + className, Math.floor(Math.random() * 10 + 1) * Date.now() + '');\n            Controller._instances.push(new this(element));\n        }\n\n        this.afterInstantiating(elements, Controller._instances);\n    }\n}\n","/**\n * Simple Singelton Service implementation\n * which will be extended by the other Services like\n * - DataSerivce\n * - TemplateService\n * - ...\n *\n * @export\n * @class Service\n */\nexport class Service {\n\n    /**\n     * Instance of the Service as singleton\n     *\n     * @static\n     * @type {Service}\n     */\n    private static _instance: Service;\n\n    /**\n     * Returns the current instance or creates a new\n     * one if there isn't already an instance available.\n     *\n     * @static\n     * @returns {Service} Instance of the current Service\n     */\n    static getInstance(): Service {\n        if (!(this._instance instanceof Service)) {\n            this._instance = new this();\n        }\n        return this._instance;\n    }\n\n    /**\n     * Naming Wrapper for the getInstance() function\n     * because inject sounds cooler.\n     *\n     * @static\n     * @returns {Service} Instance of the current Service\n     */\n    static inject(): Service {\n        return this.getInstance();\n    }\n}\n","import {MobileDetectService} from './services/MobileDetectService';\nimport {RoomleButton} from './RoomleButton';\nimport {RoomleButtonSettings} from './services/SettingsService';\n\nconst mobileDetect:MobileDetectService = <MobileDetectService>MobileDetectService.inject();\nmobileDetect.isIOS();\nif (!(<any>window).Promise) {\n\n    const scriptId = 'rml-button-lib';\n    const script = <HTMLElement>document.getElementById(scriptId);\n    const href = script.getAttribute('src');\n    const element = document.createElement('script');\n    const url = href.slice(0, href.lastIndexOf('/'));\n\n    element.onload = ()=> RoomleButton.getInstance((<any>window).RoomleButtonSettings);\n    element.onerror = (error)=>RoomleButton.getInstance((<any>window).RoomleButtonSettings);\n    element.async = true;\n    element.src = url + '/es6-promise.min.js';\n    element.setAttribute('type', 'text/javascript');\n    document.body.appendChild(element);\n} else {\n    RoomleButton.getInstance((<any>window).RoomleButtonSettings);\n}\n","import {Service} from '../lib/Service';\nimport {EnumEx} from '../utils/EnumEx';\n\nexport enum BUTTON_TYPE {\n    TRIGGER,\n    ADD,\n    VISUALIZE,\n    CONFIGURE,\n    AR,\n    MARK,\n    START_NOW,\n    VR\n}\n\nexport class ButtonsService extends Service {\n    public availableButtons:Array<BUTTON_TYPE>;\n\n    static convertButtonTypeToEnum(buttonType:string):BUTTON_TYPE {\n\n        if (buttonType === 'trigger') {\n            return BUTTON_TYPE.TRIGGER;\n        }\n\n        if (buttonType === 'add') {\n            return BUTTON_TYPE.ADD;\n        }\n\n        if (buttonType === 'ar') {\n            return BUTTON_TYPE.AR;\n        }\n\n        if (buttonType === 'configure') {\n            return BUTTON_TYPE.CONFIGURE;\n        }\n\n        if (buttonType === 'mark') {\n            return BUTTON_TYPE.MARK;\n        }\n\n        if (buttonType === 'visualize') {\n            return BUTTON_TYPE.VISUALIZE;\n        }\n\n        if (buttonType === 'vr') {\n            return BUTTON_TYPE.VR;\n        }\n\n        if (buttonType === 'start_now') {\n            return BUTTON_TYPE.START_NOW;\n        }\n\n    }\n\n    // USED TO DEFINE HOOKS FOR OUTSIDE TS WORLD. AR IS NICER THAN \"0\"\n    static convertButtonType(buttonType:BUTTON_TYPE):string {\n        if (buttonType === BUTTON_TYPE.TRIGGER) {\n            return 'trigger';\n        }\n\n        if (buttonType === BUTTON_TYPE.ADD) {\n            return 'add';\n        }\n\n        if (buttonType === BUTTON_TYPE.AR) {\n            return 'ar';\n        }\n\n        if (buttonType === BUTTON_TYPE.CONFIGURE) {\n            return 'configure';\n        }\n\n        if (buttonType === BUTTON_TYPE.MARK) {\n            return 'mark';\n        }\n\n        if (buttonType === BUTTON_TYPE.VISUALIZE) {\n            return 'visualize';\n        }\n\n        if (buttonType === BUTTON_TYPE.VR) {\n            return 'vr';\n        }\n\n        if (buttonType === BUTTON_TYPE.START_NOW) {\n            return 'start_now';\n        }\n    }\n\n    constructor() {\n        super();\n        this.availableButtons = EnumEx.getValues(BUTTON_TYPE);\n    }\n}\n","import {Service} from '../lib/Service';\n\nexport class ConsoleService extends Service {\n    static log(...args:Array<any>) {\n        console.log.apply(console, args);\n    }\n\n    static warn(...args:Array<any>) {\n        console.warn.apply(console, args);\n    }\n\n    static error(...args:Array<any>) {\n        console.error.apply(console, args);\n    }\n\n}\n","import {Service} from '../lib/Service';\nimport { MobileDetectService } from './MobileDetectService';\nimport {SettingsService} from './SettingsService';\nimport {BUTTON_TYPE, ButtonsService} from './ButtonsService';\nimport {ROOMLE_TYPE,RoomleTypeService} from './RoomleTypeService';\nimport {EventHandlerService} from './EventHandlerService';\nimport {IconsService} from './IconsService';\nimport {ConsoleService} from './ConsoleService';\nimport {DeepLink} from './MobileDetectService';\nimport {MobileRedirectService} from './MobileRedirectService';\nimport {PopupController} from '../controllers/PopupController';\nimport {RequestService} from '../services/RequestService';\nimport {Environment} from '../config/Environment';\n\nexport interface IDomBuilderCacheButton {\n    type: BUTTON_TYPE,\n    element: Node\n}\n\nexport interface buildLinkOptions {\n    isHighlighted?:boolean,\n    buildAnyway?:boolean,\n    slideMode?:boolean,\n    clickedHint?:Function\n}\n\nexport interface IDomBuilderCacheElement {\n    fragment: DocumentFragment,\n    buttons: Array<IDomBuilderCacheButton>\n}\n\nexport interface IDomBuilderButtons {\n    html: Node,\n    elements: Array<IDomBuilderCacheButton>\n}\n\nexport class DomBuilderService extends Service {\n\n    private mobileDetect:MobileDetectService = <MobileDetectService>MobileDetectService.inject();\n    private buttonsService:ButtonsService = <ButtonsService>ButtonsService.inject();\n    private iconsService:IconsService = <IconsService>IconsService.inject();\n    private mobileRedirectService:MobileRedirectService = <MobileRedirectService>MobileRedirectService.inject();\n    private requestService:RequestService = <RequestService>RequestService.inject();\n\n    private elementCache:{[key:number]: DocumentFragment} = {};\n    private buttonsCache:{[key:string]: DocumentFragment} = {};\n    private shortLinkCache:{[key:string]: string} = {};\n\n    private waitingForShortLink:boolean = false;\n\n    private createCSS(css:{[key:string]:string}) {\n        let string = '';\n        for (let property in css) {\n            if (css.hasOwnProperty(property)) {\n                string += property + ':' + css[property] + ';';\n            }\n        }\n        return string;\n    }\n\n    public addCSS() {\n        if (SettingsService.settings.createNoButtons) {\n            return;\n        }\n        let buttonsCSS = this.createCSS(SettingsService.settings.css.buttons);\n        buttonsCSS = '.' + SettingsService.settings.html.containerClass + '{' + buttonsCSS + 'visibility: hidden;}';\n\n        let itemCSS = this.createCSS(SettingsService.settings.css.item);\n        itemCSS = SettingsService.settings.selector + '{' + itemCSS + '}';\n\n        const inlineCss = '.rml-md-modal{visibility:hidden;}';\n\n        const css = buttonsCSS + itemCSS + inlineCss;\n\n        let head = document.head || document.getElementsByTagName('head')[0];\n        let style = document.createElement('style');\n\n        style.type = 'text/css';\n        style.appendChild(document.createTextNode(css));\n\n        head.appendChild(style);\n    }\n\n    private build(cacheKey:BUTTON_TYPE, content:string):HTMLElement {\n        if (!this.elementCache[cacheKey]) {\n            let fragment = document.createDocumentFragment();\n            let li = document.createElement(SettingsService.settings.html.buttonElement);\n            const buttonType:string = ButtonsService.convertButtonType(cacheKey);\n            li.setAttribute(SettingsService.settings.dataSelector.action, buttonType);\n            fragment.appendChild(li);\n            this.elementCache[cacheKey] = fragment;\n        }\n        return <HTMLElement>this.elementCache[cacheKey].cloneNode(true);\n    }\n\n    private buildTrigger() {\n        const cacheKey = BUTTON_TYPE.TRIGGER;\n        let buttonTypeStr = ButtonsService.convertButtonType(cacheKey);\n        if (!this.elementCache[cacheKey]) {\n            let fragment = document.createDocumentFragment();\n            let li = document.createElement(SettingsService.settings.html.buttonElement);\n            li.setAttribute(SettingsService.settings.dataSelector.action, buttonTypeStr);\n            const icon = this.iconsService.create(buttonTypeStr);\n            //let contentNode = document.createTextNode(content);\n            //li.appendChild(contentNode);\n            li.appendChild(icon);\n            fragment.appendChild(li);\n            this.elementCache[cacheKey] = fragment;\n        }\n        return <HTMLElement>this.elementCache[cacheKey].cloneNode(true);\n    }\n\n    private buildPopUpDom():Element {\n        const popUp = document.body.querySelectorAll('[data-rml-deeplink-popup-container]');\n        if (popUp && popUp.length > 0) {\n            return popUp[0];\n        }\n        let container = document.createElement('div');\n        container.setAttribute('data-rml-deeplink-popup-container', '');\n        container.classList.add('rml-btn');\n        let modal = document.createElement('div');\n        modal.classList.add('rml-md-modal');\n        modal.classList.add('rml-popup');\n        modal.classList.add('rml-md-effect-1');\n        modal.setAttribute('data-rml-deeplink-popup', '');\n        let content = document.createElement('div');\n        content.classList.add('rml-md-content');\n        let closer = document.createElement('div');\n        closer.classList.add('rml-popup--close');\n        let back = document.createElement('div');\n        back.classList.add('rml-popup--back');\n\n        let links = document.createElement('div');\n        links.classList.add('rml-generated-content');\n\n\n        let overlay = document.createElement('div');\n        overlay.classList.add('rml-md-overlay');\n\n        content.appendChild(closer);\n        content.appendChild(back);\n        content.appendChild(links);\n        modal.appendChild(content);\n\n        container.appendChild(modal);\n        container.appendChild(overlay);\n        return container;\n    }\n\n    public buildCustomPopUp(content:HTMLElement, parent:Element = document.body) {\n        const container = this.buildPopUpDom();\n        let contentDiv = container.querySelectorAll('.rml-md-content')[0];\n        let oldContent = contentDiv.querySelector('.rml-generated-content');\n        oldContent.innerHTML = '';\n        if (content) {\n            oldContent.appendChild(content);\n        }\n        const popUp = document.body.querySelectorAll('[data-rml-deeplink-popup-container]');\n        if (!popUp || popUp.length === 0) {\n            parent.appendChild(container);\n            const instanceSelector = SettingsService.settings.selector;\n            let element = document.body;\n            PopupController.parse(instanceSelector, element);\n        }\n    }\n\n    public buildPopUp(parent:Element = document.body) {\n        const container = this.buildPopUpDom();\n        parent.appendChild(container);\n    }\n\n    private buildAddToPlan() {\n        return this.build(BUTTON_TYPE.ADD, 'Plan');\n    }\n\n    private buildVisualize() {\n        return this.build(BUTTON_TYPE.VISUALIZE, 'Visualize');\n    }\n\n    private buildConfigure() {\n        return this.build(BUTTON_TYPE.CONFIGURE, 'Configure');\n    }\n\n    private buildAR() {\n        return this.build(BUTTON_TYPE.AR, 'Augmented Reality');\n    }\n\n    private buildMark() {\n        return this.build(BUTTON_TYPE.MARK, 'Mark');\n    }\n\n    private buildVR() {\n        return this.build(BUTTON_TYPE.VR, 'Virtual Reality');\n    }\n\n    private buildButtons(type:ROOMLE_TYPE):Node {\n        let cacheKey:string = '';\n        this.buttonsService.availableButtons.forEach((buttonType)=> {\n            if (this.mobileDetect.generateLink('', type, buttonType)) {\n                cacheKey += buttonType;\n            }\n        });\n        if (!this.buttonsCache[cacheKey]) {\n            let fragment = document.createDocumentFragment();\n            let div = document.createElement(SettingsService.settings.html.containerType);\n            div.classList.add(SettingsService.settings.html.containerClass);\n\n            let ul = document.createElement(SettingsService.settings.html.buttonsContainer);\n            let oneAdded = false;\n\n            this.buttonsService.availableButtons.forEach((buttonType)=> {\n\n                let link = this.mobileDetect.generateLink('', type, buttonType);\n                if (!link) {\n                    return;\n                }\n                if (SettingsService.settings.showOnlyTrigger) {\n                    oneAdded = true;\n                    return;\n                }\n                if (buttonType === BUTTON_TYPE.ADD) {\n                    let add = this.buildAddToPlan();\n                    ul.appendChild(add);\n                    oneAdded = true;\n                    return;\n                }\n                if (buttonType === BUTTON_TYPE.AR) {\n                    let ar = this.buildAR();\n                    ul.appendChild(ar);\n                    oneAdded = true;\n                    return;\n                }\n                if (buttonType === BUTTON_TYPE.CONFIGURE) {\n                    let conf = this.buildConfigure();\n                    ul.appendChild(conf);\n                    oneAdded = true;\n                    return;\n                }\n                if (buttonType === BUTTON_TYPE.MARK) {\n                    let mark = this.buildMark();\n                    ul.appendChild(mark);\n                    oneAdded = true;\n                    return;\n                }\n                if (buttonType === BUTTON_TYPE.VISUALIZE) {\n                    let vis = this.buildVisualize();\n                    ul.appendChild(vis);\n                    oneAdded = true;\n                    return;\n                }\n                if (buttonType === BUTTON_TYPE.VR) {\n                    let vr = this.buildVR();\n                    ul.appendChild(vr);\n                    oneAdded = true;\n                    return;\n                }\n                ConsoleService.error('ButtonType \"' + buttonType + '\" unknown');\n            });\n\n            if (oneAdded) {\n                const trigger = this.buildTrigger();\n                ul.insertBefore(trigger, ul.firstChild);\n                div.appendChild(ul);\n            }\n            fragment.appendChild(div);\n            this.buttonsCache[cacheKey] = fragment;\n        }\n        return this.buttonsCache[cacheKey].cloneNode(true);\n    }\n\n    public getButtons(type:ROOMLE_TYPE):Node {\n        return this.buildButtons(type);\n    }\n\n    private buildDeeplink(type:ROOMLE_TYPE, id:string) {\n        let shortenId = 1;\n        if (type === ROOMLE_TYPE.CONFIGURATION) {\n            shortenId = 3;\n        }\n        if (type === ROOMLE_TYPE.CONFIGURABLE_ITEM || type === ROOMLE_TYPE.ITEM) {\n            shortenId = 4\n        }\n        const token = 'anonymous';\n        const today = new Date();\n        const apiKey = 'roomle_portal_v2';\n        let tokenEncoded = today.toISOString() + ';' + token + ';' + apiKey;\n        tokenEncoded = '03-' + window.btoa(tokenEncoded);\n        return this.requestService.fetchJSON(Environment.config.rmlco, {\n            method: 'POST',\n            headers: {\n                'apiKey': 'roomle_portal_v2',\n                'currentTenant': 9,\n                'language': 'en',\n                'locale': 'en',\n                'token': tokenEncoded\n            },\n            body: {\n                shortId: {\n                    type: shortenId,\n                    referencedId: id\n                }\n            }\n\n        });\n    }\n\n    private isAvailableLink(linkType:string) {\n        if (ButtonsService.convertButtonTypeToEnum(linkType) === BUTTON_TYPE.MARK) {\n            return false;\n        }\n        if (ButtonsService.convertButtonTypeToEnum(linkType) === BUTTON_TYPE.START_NOW) {\n            return false;\n        }\n        return true;\n    }\n\n    private createDeeplinkInput(container:Element, link:string):HTMLInputElement {\n        container.innerHTML = '';\n        let input = document.createElement('input');\n        input.setAttribute('type', 'text');\n        input.setAttribute('value', link);\n        input.setAttribute('readonly', 'readonly');\n        input.addEventListener('click', (e:Event)=> {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            input.select();\n        });\n        container.appendChild(input);\n        return input;\n    }\n\n    private createCopySvg(container:Element, input:HTMLInputElement) {\n        if (typeof document.execCommand !== 'function') {\n            return;\n        }\n        const copySvg = this.iconsService.createCopy();\n        copySvg.classList.add('rml-clickable');\n        copySvg.classList.add('rml-fake-link');\n        copySvg.classList.add('rml-icons__copy');\n        copySvg.addEventListener('click', (/*event:Event*/)=> {\n            input.select();\n            try {\n                document.execCommand('copy');\n            } catch (e) {\n\n            }\n        });\n        container.appendChild(copySvg);\n\n    }\n\n    public addShortlink(element:Element, type:ROOMLE_TYPE, buttonType:string, id:string) {\n        let h3 = element.querySelector('.rml-deeplink--link');\n        let needsAppend = false;\n        if (!h3) {\n            h3 = document.createElement('span');\n            needsAppend = true;\n        }\n\n        h3.classList.add('rml-deeplink--link');\n        h3.classList.add('rml-deeplink--heading');\n        h3.classList.add('text--red');\n        if (needsAppend) {\n            element.appendChild(h3);\n        }\n        const cacheKey = type + ':' + id;\n        const cachedLink = this.shortLinkCache[cacheKey];\n        if (cachedLink) {\n            const inputCached = this.createDeeplinkInput(h3, cachedLink);\n            this.createCopySvg(h3, inputCached);\n        } else {\n            if (this.waitingForShortLink) {\n                return;\n            }\n            this.waitingForShortLink = true;\n            let spinner = document.createElement('span');\n            spinner.classList.add('rml-spinner');\n            spinner.classList.add('rml-spinner--white');\n            h3.appendChild(spinner);\n            this.buildDeeplink(type, id).then((shortLink:any)=> {\n                const link = Environment.config.shortlink(RoomleTypeService.convertRoomleType(type), id, buttonType, shortLink.shortId.shortId);\n                const input = this.createDeeplinkInput(h3, link);\n                this.createCopySvg(h3, input);\n                this.shortLinkCache[cacheKey] = link;\n                this.waitingForShortLink = false;\n            }, ()=> {\n                this.waitingForShortLink = false;\n                h3.removeChild(spinner);\n                h3.textContent = SettingsService.settings.translations.errors.deeplinkcreate;\n            });\n        }\n    }\n\n    public buildLink(link:DeepLink, options:buildLinkOptions = {}):Element {\n        const {\n            isHighlighted: isHighlighted = false,\n            buildAnyway:buildAnyway = false,\n            slideMode:slideMode = false,\n            clickedHint:clickedHint=function () {\n            }} = options;\n        if (!this.isAvailableLink(link.type) && !buildAnyway) {\n            return;\n        }\n        let container = document.createElement('a');\n        container.classList.add('rml-deeplink--row');\n        container.setAttribute('target', '_blank');\n        container.setAttribute('href', link.link);\n        let text = document.createElement('span');\n        text.classList.add('rml-deeplink--text');\n        text.classList.add('rml-deeplink--heading');\n        text.textContent = SettingsService.settings.translations[link.type].heading;\n        let icon = document.createElement('span');\n        icon.classList.add('rml-deeplink--icon');\n        const svgIcon = this.iconsService.create(link.type);\n        icon.appendChild(svgIcon); //= 'i';//SettingsService.settings.translations[link.type].icon;\n\n        container.appendChild(text);\n        container.appendChild(icon);\n\n        const callback = SettingsService.settings.callback.button[link.type];\n\n        if (callback) {\n            container.addEventListener('click', ()=> {\n                callback(link.id, RoomleTypeService.convertRoomleType(link.roomleType), link.type);\n            });\n        }\n\n\n        if (link.alternate) {\n            let alternate = document.createElement('span');\n            alternate.classList.add('rml-deeplink--hint');\n            alternate.textContent = SettingsService.settings.translations[link.type].hint[link.alternate];\n            container.appendChild(alternate);\n            container.addEventListener('click', (e:Event)=> {\n                e.preventDefault();\n                if (slideMode) {\n                    alternate.classList.add('rml-hint__slide');\n                } else {\n                    if (alternate.classList.contains('rml-hint__show')) {\n                        alternate.classList.remove('rml-hint__show');\n                    } else {\n                        this.addShortlink(alternate, link.roomleType, link.type, link.id);\n                        alternate.classList.add('rml-hint__show');\n                    }\n                }\n                clickedHint();\n                return false;\n            });\n            if (isHighlighted) {\n\n                setTimeout(()=> {\n                    alternate.classList.add('rml-hint__show');\n                    if (slideMode) {\n                        alternate.classList.add('rml-hint__slide');\n                        clickedHint();\n                    } else {\n                        this.addShortlink(alternate, link.roomleType, link.type, link.id);\n                    }\n                }, 1);\n            }\n        } else {\n            if (link.os !== 'desktop') {\n                this.mobileRedirectService.createDeeplinkFor(container, link.os);\n            }\n        }\n        return container;\n    }\n\n}\n\n","import {Service} from '../lib/Service';\nimport {ROOMLE_TYPE,RoomleTypeService} from './RoomleTypeService'\nimport {BUTTON_TYPE, ButtonsService} from './ButtonsService';\nimport {SettingsService} from './SettingsService';\nimport {MobileDetectService} from './MobileDetectService';\n\nexport enum EVENT_TYPES {\n    TRIGGER,\n    POP_UP_OPEN,\n    POP_UP_CLOSE\n}\n\nexport class EventHandlerService extends Service {\n\n    private mobileDetectService:MobileDetectService = <MobileDetectService>MobileDetectService.inject();\n\n    private triggerCallbacks:Array<Function> = [];\n    private openPopUpCallbacks:Array<Function> = [];\n\n    public subscribe(event:EVENT_TYPES, callback:Function) {\n        if (event === EVENT_TYPES.TRIGGER) {\n            this.triggerCallbacks.push(callback);\n        }\n        if (event === EVENT_TYPES.POP_UP_OPEN) {\n            this.openPopUpCallbacks.push(callback);\n        }\n    }\n\n    private findSelector(element:HTMLElement, selector:string, depth = 0, maxDepth = 20):Element {\n        if (maxDepth === depth) {\n            return null;\n        }\n        if (element.matches && element.matches(selector)) {// || element.matches('[' + selector + ']')) {\n            return element;\n        }\n        const parent = element.parentElement || <HTMLElement>element.parentNode;\n        if (!parent) {\n            return null;\n        }\n        return this.findSelector(parent, selector, depth + 1);\n    }\n\n    public dispatchOpenPopUp(e:Event) {\n        this.openPopUpCallbacks.forEach((callback)=> {\n            callback(e);\n        });\n    }\n\n    // DO NOT USE ENUM FOR TYPE, BECAUSE CALLBACKS ARE ON \"item\" and not \"0\"\n    public dispatch(e:Event, type:string, id:string, buttonType:BUTTON_TYPE, highlight:string = null, newWindow:boolean = false) {\n\n        const clickedButton = ButtonsService.convertButtonType(buttonType);\n\n        const links = this.mobileDetectService.getLinks(id, RoomleTypeService.convertTypeToEnum(type));\n        if (buttonType === BUTTON_TYPE.TRIGGER) {\n            const triggerKey = ButtonsService.convertButtonType(BUTTON_TYPE.TRIGGER);\n            const callbackTrigger:any = SettingsService.settings.callback[triggerKey];\n            if (typeof callbackTrigger === 'function') {\n                callbackTrigger(e, id, type, links, highlight, newWindow);\n            }\n            this.triggerCallbacks.forEach((callback)=> {\n                callback(e, id, type, links, highlight, newWindow);\n            });\n        }\n        const callbackForType:any = SettingsService.settings.callback[type];\n        if (callbackForType && callbackForType[clickedButton] && typeof callbackForType[clickedButton] === 'function') {\n            callbackForType[clickedButton](e, id, type, links, highlight, newWindow);\n        }\n    }\n\n    private getElement(parent:Element, selector:string):Element {\n        let elements = parent.querySelectorAll('[' + selector + ']');\n        if (!elements || elements.length === 0) {\n            if (parent.hasAttribute(selector)) {\n                return parent;\n            }\n        }\n        return elements[0];\n    }\n\n    public handle(e:Event) {\n\n        const target:HTMLElement = <HTMLElement>(e.target || e.srcElement);\n        const button = this.findSelector(target, '[' + SettingsService.settings.dataSelector.action + ']');\n        if (!button) {\n            return;\n        }\n        const buttonType = button.getAttribute(SettingsService.settings.dataSelector.action);\n        if (buttonType) {\n            const roomleElement = this.findSelector(target, SettingsService.settings.selector);\n            if (!roomleElement) {\n                return;\n            }\n            let typeElement = this.getElement(roomleElement, SettingsService.settings.dataSelector.type);\n\n            let type:string = null;\n            let id:string = null;\n            if (typeElement) {\n                type = typeElement.getAttribute(SettingsService.settings.dataSelector.type);\n            }\n            let idElement = this.getElement(roomleElement, SettingsService.settings.dataSelector.id);\n            if (idElement) {\n                id = idElement.getAttribute(SettingsService.settings.dataSelector.id);\n            }\n            this.dispatch(e, type, id, ButtonsService.convertButtonTypeToEnum(buttonType));\n        }\n    }\n}\n","import {Service} from '../lib/Service';\nimport {ButtonsService, BUTTON_TYPE} from './ButtonsService';\nexport class IconsService extends Service {\n\n    static SVG_NS:string = 'http://www.w3.org/2000/svg';\n\n    private getSvg(attributes?:{[key:string]:string}):Element {\n        attributes = attributes || {};\n        if (!attributes['width']) {\n            attributes['width'] = '64';\n        }\n\n        if (!attributes['height']) {\n            attributes['height'] = '64';\n        }\n\n        //attributes['xmlns'] = IconsService.SVG_NS;\n\n        let svg = document.createElementNS(IconsService.SVG_NS, 'svg');\n        for (let attribute in attributes) {\n            svg.setAttributeNS(null, attribute, attributes[attribute]);\n        }\n        return svg;\n    }\n\n    private getNode(name:string, attributes?:{[key:string]:string}):Element {\n        let element = document.createElementNS(IconsService.SVG_NS, name);\n        for (let attribute in attributes) {\n            element.setAttributeNS(null, attribute, attributes[attribute]);\n        }\n        return element;\n    }\n\n    private buildPlanIcon(isPlus:boolean):Element {\n        let svg = this.getSvg({viewBox: '0 0 50 50'});\n        let firstPath = this.getNode('path', {\n            d: 'M39.72,23.16,31,17.93h0l-.36-.22-5.13-3.07h0l-.36-.22a.33.33,0,0,0-.35,0l-.36.22h0l-13.87,8.3h0l-.36.22a.53.53,0,0,0,0,.85l.36.22h0l5.13,3.07h0l.36.22h0l8.38,5h0l.24.14.12.07a.33.33,0,0,0,.35,0L39.72,24a.53.53,0,0,0,0-.85Zm-5.09,2.4-3.34-2a.33.33,0,0,0-.35,0l-.36.22a.53.53,0,0,0,0,.85l2.8,1.68-8.43,5-7.49-4.48,2.89-1.73a.53.53,0,0,0,0-.85l-.18-.11h0l-.91-.54a.33.33,0,0,0-.35,0l-.36.22a.53.53,0,0,0,0,.85h0l-2.36,1.41L12,23.58l2.36-1.41,2.45,1.47a.34.34,0,0,0,.17,0,.34.34,0,0,0,.17,0l.36-.22a.53.53,0,0,0,0-.85l-1.91-1.14L25,15.82l4.24,2.54-7.85,4.7a.53.53,0,0,0,0,.85l.36.22a.33.33,0,0,0,.35,0l3.84-2.3,1.83,1.1a.34.34,0,0,0,.17,0,.34.34,0,0,0,.17,0l.36-.22a.53.53,0,0,0,0-.85l-1.3-.77,3.3-2,7.49,4.48Z',\n        });\n        /*let secondPath = this.getNode('path', {\n         d: 'M48,21.46L34.61,14.87h0l-0.55-.27-7.83-3.87h0l-0.55-.27a0.6,0.6,0,0,0-.53,0l-0.55.27h0L3.42,21.19h0l-0.55.27a0.6,0.6,0,0,0,0,1.08l0.55,0.27h0l7.83,3.87h0l0.55,0.27h0l12.8,6.32h0L25,33.45l0.18,0.09a0.61,0.61,0,0,0,.53,0L48,22.54A0.6,0.6,0,0,0,48,21.46Zm-7.77,3L35.09,22a0.6,0.6,0,0,0-.53,0L34,22.24a0.6,0.6,0,0,0,0,1.08l4.28,2.11L25.41,31.79,14,26.14,18.39,24a0.6,0.6,0,0,0,0-1.08l-0.28-.14h0l-1.39-.69a0.6,0.6,0,0,0-.53,0l-0.55.27a0.6,0.6,0,0,0,0,1.08h0l-3.6,1.78L5.59,22l3.6-1.78,3.74,1.85a0.61,0.61,0,0,0,.27.06,0.6,0.6,0,0,0,.27-0.06L14,21.8a0.6,0.6,0,0,0,0-1.08l-2.92-1.44,14.32-7.07,6.48,3.2-12,5.92a0.6,0.6,0,0,0,0,1.08l0.55,0.27a0.6,0.6,0,0,0,.53,0l5.86-2.89,2.8,1.38a0.61,0.61,0,0,0,.27.06,0.6,0.6,0,0,0,.27-0.06l0.55-.27a0.6,0.6,0,0,0,0-1.08l-2-1,5-2.49L45.24,22Z',\n         transform: 'translate(-2.53 -10.4)'\n         });*/\n        svg.appendChild(firstPath);\n        //svg.appendChild(secondPath);\n        if (isPlus) {\n            let thirdPath = this.getNode('path', {\n                d: 'M37.29,33.15v2.48h-1.4V33.15H33.42v-1.4h2.47V29.29h1.4v2.46h2.47v1.4Z',\n            });\n            svg.appendChild(thirdPath);\n        }\n        return svg;\n    }\n\n    private buildAdd():Element {\n        return this.buildPlanIcon(true);\n    }\n\n    private buildPlanNow():Element {\n        return this.buildPlanIcon(false);\n    }\n\n    private buildAr():Element {\n        let svg = this.getSvg({viewBox: '0 0 50 50'});\n        let firstPath = this.getNode('path', {\n            d: 'M24.41,33.24h0c-5.22-.08-9.5-2.78-14.31-9a.75.75,0,0,1-.16-.46c0-.63,4.46-6.73,10.67-8.84,8.34-2.84,15,3,19.19,8.38a.75.75,0,0,1,.16.46c0,.45-.63,1.34-1.87,2.63a.75.75,0,0,1-1.09-1,13.24,13.24,0,0,0,1.3-1.52c-4.4-5.57-9-8.3-13.69-8.15-6.69.23-11.71,6.36-13,8.06,5.49,7,9.55,8,12.8,8a.75.75,0,0,1,0,1.5Z',\n        });\n        let secondPath = this.getNode('path', {\n            d: 'M24.94,29.4a5.42,5.42,0,0,1-5.05-3.5,5.58,5.58,0,0,1,1.56-6.51,5.3,5.3,0,0,1,6.44-.3,5.66,5.66,0,0,1,2.34,6.39A.75.75,0,1,1,28.79,25a4.18,4.18,0,0,0-1.74-4.7,3.79,3.79,0,0,0-4.65.21,4.12,4.12,0,0,0-1.12,4.79,3.9,3.9,0,0,0,4,2.55.74.74,0,0,1,.81.69.75.75,0,0,1-.69.81Z',\n        });\n\n        let graph = this.getNode('g');\n        let thirdPath = this.getNode('path', {\n            d: 'M30.5,35.1,30,33.68H27.18L26.7,35.1H25.06l2.92-8h1.23l2.93,8Zm-1.87-5.65-1,2.92h2Z',\n        });\n\n        let fourthPath = this.getNode('path', {\n            d: 'M37.39,35.1l-1.57-3.2H34.69v3.2H33.13v-8h3.14a2.42,2.42,0,0,1,2.6,2.46,2.16,2.16,0,0,1-1.46,2.11L39.2,35.1Zm-1.22-6.62H34.69v2.12h1.48a1.06,1.06,0,1,0,0-2.12Z',\n        });\n\n        graph.appendChild(thirdPath);\n        graph.appendChild(fourthPath);\n\n        svg.appendChild(firstPath);\n        svg.appendChild(secondPath);\n        svg.appendChild(graph);\n        return svg;\n    }\n\n    private buildConfigure():Element {\n        let svg = this.getSvg({viewBox: '0 0 50 50'});\n        let path = this.getNode('path', {\n            d: 'M34.67,10.9,28.9,8.22a1.87,1.87,0,0,0-2.48.91L16,31.42a1.86,1.86,0,0,0-.17.75L15.66,40a1.85,1.85,0,0,0,.53,1.34,1.9,1.9,0,0,0,1.35.57,1.86,1.86,0,0,0,1.23-.47l5.93-5.22a1.86,1.86,0,0,0,.46-.62L35.58,13.37A1.88,1.88,0,0,0,34.67,10.9ZM17.47,40.22l.14-7,4.91,2.55ZM32,16.94l-5.88-2.73,1.94-4.38L34,12.57Z',\n        });\n        svg.appendChild(path);\n        return svg;\n    }\n\n    private buildMark():Element {\n        let svg = this.getSvg({viewBox: '0 0 50 50'});\n        let path = this.getNode('path', {\n            d: 'M32.16,12.05A7.89,7.89,0,0,0,25,16.51,7.93,7.93,0,0,0,10,20C10,29.35,25,39.64,25,39.64s15-10.37,15-19.66A7.91,7.91,0,0,0,32.16,12.05Z',\n        });\n        svg.appendChild(path);\n        return svg;\n    }\n\n    private buildCopy():Element {\n        let svg = this.getSvg({viewBox: '0 0 32 32'});\n        let firstPath = this.getNode('path', {\n            d: 'M28.681 11.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-11.5c-1.379 0-2.5 1.122-2.5 2.5v23c0 1.378 1.121 2.5 2.5 2.5h19c1.378 0 2.5-1.122 2.5-2.5v-15.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 9.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268v0zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-19c-0.271 0-0.5-0.229-0.5-0.5v-23c0-0.271 0.229-0.5 0.5-0.5 0 0 11.499-0 11.5 0v7c0 0.552 0.448 1 1 1h7v15.5z',\n        });\n        let secondPath = this.getNode('path', {\n            d: 'M18.841 1.319c-1.612-1.182-2.393-1.319-2.841-1.319h-11.5c-1.378 0-2.5 1.121-2.5 2.5v23c0 1.207 0.86 2.217 2 2.45v-25.45c0-0.271 0.229-0.5 0.5-0.5h15.215c-0.301-0.248-0.595-0.477-0.873-0.681z',\n        });\n        svg.appendChild(firstPath);\n        svg.appendChild(secondPath);\n        return svg;\n    }\n\n    private buildTrigger():Element {\n        let svg = this.getSvg({viewBox: '0 0 32.19 29.5'});\n        let path1 = this.getNode('path', {\n            d: 'M21,22.36c-1.57,0-1.87,1.36-1.87,3s0.17,3,1.87,3,1.87-1.36,1.87-3S22.59,22.36,21,22.36Z',\n            transform: 'translate(-9 -15.26)'\n        });\n        let path2 = this.getNode('path', {\n            d: 'M31.1,22.36c-1.57,0-1.87,1.36-1.87,3s0.17,3,1.87,3S33,27,33,25.36,32.66,22.36,31.1,22.36Z',\n            transform: 'translate(-9 -15.26)'\n        });\n        let path3 = this.getNode('path', {\n            d: 'M26,15.26c-5.86,0-17,.73-17,3.48V31.89a1.16,1.16,0,0,0,.17.49c1,2.06,9.46,3,16.85,3,5.86,0,17-.73,17-3.48V18.74C43,16,31.86,15.26,26,15.26ZM21,30.11c-3.46,0-4.69-2.14-4.69-4.79S17.6,20.53,21,20.53s4.69,2.14,4.69,4.79S24.47,30.11,21,30.11Zm10.08,0c-3.46,0-4.69-2.14-4.69-4.79s1.28-4.79,4.69-4.79,4.69,2.14,4.69,4.79S34.55,30.11,31.1,30.11Z',\n            transform: 'translate(-9 -15.26)'\n        });\n        let path4 = this.getNode('path', {\n            d: 'M31.1,28.36c-1.7,0-1.87-1.36-1.87-3s0.3-3,1.87-3,1.87,1.36,1.87,3S32.8,28.36,31.1,28.36Z',\n            transform: 'translate(-9 -15.26)'\n        });\n        let path5 = this.getNode('path', {\n            d: 'M21,28.36c-1.7,0-1.87-1.36-1.87-3s0.3-3,1.87-3,1.87,1.36,1.87,3S22.72,28.36,21,28.36Z',\n            transform: 'translate(-9 -15.26)'\n        });\n        svg.appendChild(path1);\n        svg.appendChild(path2);\n        svg.appendChild(path3);\n        svg.appendChild(path4);\n        svg.appendChild(path5);\n        return svg;\n    }\n\n    private buildVisualize():Element {\n        let svg = this.getSvg({viewBox: '0 0 50 50'});\n        let path = this.getNode('path', {\n            d: 'M25,34.59c-6.32,0-11.44-4.71-14.84-9.13a.75.75,0,0,1,0-.87c.24-.36,6-8.87,14.49-9.17C29.9,15.23,35,18.3,39.85,24.55A.74.74,0,0,1,40,25c0,.6-4.61,6.78-10.68,8.84A13.47,13.47,0,0,1,25,34.59ZM11.65,25c4.4,5.55,9,8.28,13.68,8.12,6.7-.23,11.74-6.38,13-8.08-4.4-5.55-9-8.28-13.69-8.12C17.93,17.14,12.91,23.28,11.65,25ZM25,30.49A5.49,5.49,0,1,1,30.38,25,5.45,5.45,0,0,1,25,30.49ZM25,21a4,4,0,1,0,3.91,4A4,4,0,0,0,25,21Z',\n        });\n        svg.appendChild(path);\n        return svg;\n    }\n\n    private buildVr():Element {\n        let svg = this.getSvg({viewBox: '0 0 50 50'});\n        let path = this.getNode('path', {\n            d: 'M37.88,16.24H12.18A2.16,2.16,0,0,0,10,18.4V31.6a2.16,2.16,0,0,0,2.16,2.16H20a1.54,1.54,0,0,0,1.46-.93l1.75-4.38a1.92,1.92,0,0,1,3.5.06l1.52,4.26a1.59,1.59,0,0,0,1.46,1h8.12A2.16,2.16,0,0,0,40,31.6V18.46A2.05,2.05,0,0,0,37.88,16.24ZM18.6,28.8a3.33,3.33,0,0,1-3.33-3.33,3.33,3.33,0,1,1,6.66,0A3.33,3.33,0,0,1,18.6,28.8Zm12.85,0a3.33,3.33,0,0,1-3.33-3.33,3.33,3.33,0,0,1,6.66,0A3.33,3.33,0,0,1,31.45,28.8Z',\n        });\n        svg.appendChild(path);\n        return svg;\n    }\n\n\n    public create(buttonType:string):Element {\n        const button:BUTTON_TYPE = ButtonsService.convertButtonTypeToEnum(buttonType);\n        if (button === BUTTON_TYPE.ADD) {\n            return this.buildAdd();\n        }\n        if (button === BUTTON_TYPE.AR) {\n            return this.buildAr();\n        }\n        if (button === BUTTON_TYPE.CONFIGURE) {\n            return this.buildConfigure();\n        }\n        if (button === BUTTON_TYPE.VISUALIZE) {\n            return this.buildVisualize();\n        }\n        if (button === BUTTON_TYPE.VR) {\n            return this.buildVr();\n        }\n        if (button === BUTTON_TYPE.TRIGGER) {\n            return this.buildTrigger();\n        }\n        if (button === BUTTON_TYPE.MARK) {\n            return this.buildMark();\n        }\n        if (button === BUTTON_TYPE.START_NOW) {\n            return this.buildPlanNow();\n        }\n    }\n\n    public createCopy():Element {\n        return this.buildCopy();\n    }\n}\n","import {Service} from '../lib/Service';\nexport class ImagesService extends Service {\n\n    public images:{ios:string,android:string,desktop:string,[key:string]: string} = {\n        ios: 'https://a.storyblok.com/f/4e779959c8/ios.png',\n        android: 'https://a.storyblok.com/f/1386db8cd0/android.png',\n        desktop: 'https://a.storyblok.com/f/cf5aa03c64/desktop.png',\n    };\n\n    preloadImages() {\n        var ios = new Image();\n        var android = new Image();\n        var desktop = new Image();\n\n        ios.src = this.images.ios;\n        android.src = this.images.android;\n        desktop.src = this.images.desktop;\n    }\n\n}\n","import {Service} from '../lib/Service';\nimport {ROOMLE_TYPE,RoomleTypeService} from './RoomleTypeService'\nimport {BUTTON_TYPE,ButtonsService} from './ButtonsService';\nimport { DomBuilderService } from './DomBuilderService';\nimport {SettingsService} from './SettingsService';\nimport {EventHandlerService} from './EventHandlerService';\n\ninterface IWindowMSStream extends Window {\n    MSStream:any\n}\n\nexport interface DeepLink {\n    type: string,\n    link: string,\n    alternate: 'ios' | 'android' | 'desktop',\n    os: 'ios' | 'android' | 'desktop',\n    roomleType: ROOMLE_TYPE,\n    id: string\n}\n\ndeclare var WindowMSStream:IWindowMSStream;\n\nexport class MobileDetectService extends Service {\n\n    private isOSCached:boolean = null;\n    private isAndroidCached:boolean = null;\n    private isIPadCached:boolean = null;\n    private isSupportedMobileCached:boolean = null;\n    private buttonsService:ButtonsService = <ButtonsService>ButtonsService.inject();\n\n    public isIOS():boolean {\n        if (this.isOSCached !== null) {\n            return this.isOSCached;\n        }\n        return /iPad|iPhone|iPod/i.test(navigator.userAgent) && !(<any>window).MSStream; // USE MSStream because of http://stackoverflow.com/a/9039885\n    }\n\n    public isAndroid():boolean {\n        if (this.isAndroidCached !== null) {\n            return this.isAndroidCached;\n        }\n\n        return /Android/i.test(navigator.userAgent) && !(<any>window).MSStream; // USE MSStream because of http://stackoverflow.com/a/9039885\n    }\n\n    public isSupportedMobile():boolean {\n        if (this.isSupportedMobileCached !== null) {\n            return this.isSupportedMobileCached;\n        }\n        return this.isIOS() || this.isAndroid();\n    }\n\n    public isIPad():boolean {\n        if (this.isIPadCached !== null) {\n            return this.isIPadCached;\n        }\n\n        return /iPad/i.test(navigator.userAgent) && !(<any>window).MSStream; // USE MSStream because of http://stackoverflow.com/a/9039885\n    }\n\n    private handlePlan(id:string, type:ROOMLE_TYPE, buttonType:BUTTON_TYPE):DeepLink {\n        const buttonTypeStr = ButtonsService.convertButtonType(buttonType);\n        const typeStr = type;\n        const iosPlanLink = 'roomle://3d/planId/' + id;\n        let desktopLink = SettingsService.settings.web.baseUrl + 'editor/' + id;\n        if (buttonType === BUTTON_TYPE.VISUALIZE) {\n            const viewrLink = 'roomleviewer://plan/' + id;\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: viewrLink,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: iosPlanLink,\n                    os: 'ios',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            return {\n                type: buttonTypeStr,\n                alternate: null,\n                link: desktopLink,\n                os: 'desktop',\n                roomleType: typeStr,\n                id: id\n            };\n        }\n\n        if (buttonType === BUTTON_TYPE.VR) {\n            const viewrLink = 'roomleviewer://vr/' + id;\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: viewrLink,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return {type: buttonTypeStr, alternate: null, link: viewrLink, os: 'ios', roomleType: typeStr, id: id};\n            }\n            return {type: buttonTypeStr, alternate: 'ios', link: viewrLink, os: 'desktop', roomleType: typeStr, id: id};\n        }\n\n        if (buttonType === BUTTON_TYPE.START_NOW) {\n            const viewrLink = 'roomleviewer://plan/' + id;\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: viewrLink,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: iosPlanLink,\n                    os: 'ios',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            return {\n                type: buttonTypeStr,\n                alternate: null,\n                link: desktopLink,\n                os: 'desktop',\n                roomleType: typeStr,\n                id: id\n            };\n        }\n        return null;\n    }\n\n    private createLinkForItemOrConfiguration(id:string, type:ROOMLE_TYPE, buttonType:BUTTON_TYPE, isItem:boolean):DeepLink {\n        const typeStr = type;\n        const buttonTypeStr = ButtonsService.convertButtonType(buttonType);\n        if (isItem) {\n\n        }\n        const iosIdentifier = (!isItem && type !== ROOMLE_TYPE.CONFIGURABLE_ITEM) ? 'configurationId' : 'catalogItemId';\n        const webIdentifier = (!isItem && type !== ROOMLE_TYPE.CONFIGURABLE_ITEM) ? 'configurationId[]' : 'itemId[]';\n\n        if (buttonType === BUTTON_TYPE.ADD) {\n            let desktopLink = SettingsService.settings.web.baseUrl + 'editor/' + SettingsService.settings.planId + '?' + webIdentifier + '=' + id;\n            let iosLink = 'roomle://addToPlan/' + iosIdentifier + '/' + id + '?planId=' + SettingsService.settings.planId;\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: 'desktop',\n                    link: desktopLink,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return null; //{type: buttonTypeStr, alternate: null, link: iosLink, os: 'ios', roomleType: typeStr, id: id};\n            }\n            return {\n                type: buttonTypeStr,\n                alternate: null,\n                link: desktopLink,\n                os: 'desktop',\n                roomleType: typeStr,\n                id: id\n            };\n        }\n\n        if (buttonType === BUTTON_TYPE.AR) {\n            const iosLink = 'roomle://ar/' + iosIdentifier + '/' + id;\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: 'ios',\n                    link: iosLink,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return {type: buttonTypeStr, alternate: null, link: iosLink, os: 'ios', roomleType: typeStr, id: id};\n            }\n            return {type: buttonTypeStr, alternate: 'ios', link: iosLink, os: 'desktop', roomleType: typeStr, id: id};\n        }\n\n        if (buttonType === BUTTON_TYPE.CONFIGURE && (type === ROOMLE_TYPE.CONFIGURATION || type === ROOMLE_TYPE.CONFIGURABLE_ITEM)) {\n            const isConfigurableItem = (type === ROOMLE_TYPE.CONFIGURATION) ? false : true;\n            let desktopLink = SettingsService.settings.web.baseUrl + 'configurator/' + id + (isConfigurableItem ? '?isItem=true' : '');\n            let iosLink = 'roomle://configuration/' + iosIdentifier + '/' + id;\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: 'desktop',\n                    link: desktopLink,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return {type: buttonTypeStr, alternate: null, link: iosLink, os: 'ios', roomleType: typeStr, id: id};\n            }\n            return {\n                type: buttonTypeStr,\n                alternate: null,\n                link: desktopLink,\n                os: 'desktop',\n                roomleType: typeStr,\n                id: id\n            };\n        }\n\n        if (buttonType === BUTTON_TYPE.MARK) {\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: 'www.roomle.com',\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: 'www.roomle.com',\n                    os: 'ios',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            return {\n                type: buttonTypeStr,\n                alternate: null,\n                link: 'www.roomle.com',\n                os: 'desktop',\n                roomleType: typeStr,\n                id: id\n            };\n        }\n\n        if (buttonType === BUTTON_TYPE.VISUALIZE) {\n            if (this.isAndroid()) {\n                return {\n                    type: buttonTypeStr,\n                    alternate: null,\n                    link: 'roomleviewer://item/' + id,\n                    os: 'android',\n                    roomleType: typeStr,\n                    id: id\n                };\n            }\n            if (this.isIOS()) {\n                return null;\n            }\n            return null;// {type: buttonTypeStr, alternate: '', link: 'www.roomle'};\n        }\n        return null;\n    }\n\n    public handleItem(id:string, type:ROOMLE_TYPE, buttonType:BUTTON_TYPE):DeepLink {\n        const isItem = true;\n        return this.createLinkForItemOrConfiguration(id, type, buttonType, isItem);\n    }\n\n    public handleConfiguration(id:string, type:ROOMLE_TYPE, buttonType:BUTTON_TYPE):DeepLink {\n        const isItem = false;\n        return this.createLinkForItemOrConfiguration(id, type, buttonType, isItem);\n    }\n\n    public generateLink(id:string, type:ROOMLE_TYPE, buttonType:BUTTON_TYPE, callbackUrl:string = null):DeepLink {\n        let deeplink:DeepLink = null;\n        if (type === ROOMLE_TYPE.ITEM) {\n            deeplink = this.handleItem(id, type, buttonType);\n        } else if (type === ROOMLE_TYPE.CONFIGURATION || type === ROOMLE_TYPE.CONFIGURABLE_ITEM) {\n            deeplink = this.handleConfiguration(id, type, buttonType);\n        } else if (type === ROOMLE_TYPE.PLAN) {\n            deeplink = this.handlePlan(id, type, buttonType);\n        }\n        if (!deeplink) {\n            return null;\n        }\n\n        const seperator = deeplink.link.indexOf('?') === -1 ? '?' : '&';\n        deeplink.link = deeplink.link + seperator + 'callback=' + callbackUrl;\n        return deeplink;\n    }\n\n    public getLinks(id:string, type:ROOMLE_TYPE, callbackUrl:string = null):Array<DeepLink> {\n        const availableButtons = this.buttonsService.availableButtons;\n        let links:Array<DeepLink> = [];\n        availableButtons.forEach((button)=> {\n            const link = this.generateLink(id, type, button, callbackUrl);\n            if (link) {\n                links.push(link);\n            }\n        });\n        return links;\n    }\n\n}\n\n","import {Service} from '../lib/Service';\nimport {DeepLink} from \"./MobileDetectService\";\n\ninterface OS {\n    storePrefix: string,\n}\n\ninterface OSS {\n    android: OS,\n    ios: OS,\n    [key: string]: OS;\n}\n\nexport class MobileRedirectService extends Service {\n    private delay = 1200;\n    private oss:OSS = {\n        android: {\n            storePrefix: 'https://play.google.com/store/apps/details?id='\n        },\n        ios: {\n            storePrefix: 'https://itunes.apple.com/app/'\n        }\n    };\n\n    private getTime() {\n        return new Date().getTime();\n    }\n\n    private open(url:string, newWindow:boolean = false, callback:Function = null) {\n        if (typeof callback === 'function') {\n            return callback(url);\n        }\n        if (newWindow) {\n            window.open(url);\n        } else {\n            window.location.href = url;\n        }\n    }\n\n    private handleAndroidBrowsers(appId:string, href:string, scheme:string) {\n\n        // Android Mobile\n        let isAndroidMobile = navigator.userAgent.indexOf('Android') > -1 &&\n            navigator.userAgent.indexOf('Mozilla/5.0') > -1 &&\n            navigator.userAgent.indexOf('AppleWebKit') > -1;\n\n        // Android Browser (not Chrome)\n        let regExAppleWebKit = new RegExp('AppleWebKit\\/([\\d.]+)');\n        let resultAppleWebKitRegEx = regExAppleWebKit.exec(navigator.userAgent);\n        let appleWebKitVersion = (resultAppleWebKitRegEx === null ? null : parseFloat(regExAppleWebKit.exec(navigator.userAgent)[1]));\n        let isAndroidBrowser = isAndroidMobile && appleWebKitVersion !== null && appleWebKitVersion > 500;\n\n        if (isAndroidBrowser) {\n            return 'intent:' + href.split(':')[1] + '#Intent;scheme=' + scheme + ';package=' +\n                appId + ';S.browser_fallback_url=' + encodeURI(href);\n        } else {\n            return href;\n        }\n    }\n\n    public redirect(deeplink:DeepLink, newWindow:boolean = false, callback:Function = null) {\n        this.perfromDeepLink(deeplink.link, deeplink.os, newWindow, callback);\n    }\n\n    private perfromDeepLink(href:string, os:string, newWindow:boolean = false, callback:Function = null) {\n        let clicked = false;\n        let timeout:number = null;\n        const data = this.parseHref(href, os);\n        const scheme = data.scheme;\n        const appId = data.appId;\n        let start = this.getTime();\n        clicked = true;\n        timeout = setTimeout(() => {\n            if (os === 'desktop') {\n                return;\n            }\n            if (!clicked || !timeout) {\n                return;\n            }\n            let now = this.getTime();\n            clicked = false;\n            timeout = null;\n            if (now - start >= this.delay * 2) {\n                return;\n            }\n\n            if (appId) {\n                this.open(this.oss[os].storePrefix + appId, newWindow);\n            } else if (href) {\n                this.open(href, newWindow);\n            }\n        }, this.delay);\n\n        //appId, this.oss[os].storePrefix + appId, href, scheme\n        let finalURI = this.handleAndroidBrowsers(appId, href, scheme);\n        this.open(finalURI, newWindow, callback);\n    }\n\n    private parseHref(href:string, osin:string):{appId:string,scheme:string, os: string, [key:string]:string} {\n        let hrefParts = href.split(':');\n        let scheme = hrefParts[0];\n\n        let appId = 'roomle/id732050356';\n        if (scheme === 'roomleviewer') {\n            appId = 'com.roomle.viewer';\n            if (osin === 'ios') {\n                appId = 'roomle-viewr/id1053860177';\n            }\n        }\n        return {appId: appId, scheme: scheme, os: osin};\n    }\n\n    public createDeeplinkFor(el:HTMLElement, os:string) {\n\n        const href = el.getAttribute('href');\n        const data = this.parseHref(href, os);\n        const appId = data.appId;\n        if (os && appId) {\n            el.addEventListener('click', (e)=> {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                this.perfromDeepLink(href, os);\n            });\n        } else if (!href || href === '#') {\n            el.style.display = 'none';\n        }\n    };\n\n}\n","import {Service} from '../lib/Service';\n\nexport class PolyfillService extends Service {\n    constructor() {\n        super();\n        if (!Element.prototype.matches) {\n            // CAST TO ANY AS QUICK&DIRTY SOLUTION FOR NON STANDARD NAMES!\n            Element.prototype.matches =\n                (<any>Element).prototype.matchesSelector ||\n                (<any>Element).prototype.mozMatchesSelector ||\n                (<any>Element).prototype.msMatchesSelector ||\n                (<any>Element).prototype.oMatchesSelector ||\n                (<any>Element).prototype.webkitMatchesSelector ||\n                function (s) {\n                    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                        i = matches.length;\n                    while (--i >= 0 && matches.item(i) !== this) {\n                    }\n                    return i > -1;\n                };\n        }\n    }\n}\n","//import { Promise } from 'es6-promise';\nimport { Service } from '../lib/Service';\n\nexport interface IRequestOptions {\n    method?: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'HEAD' | 'OPTIONS',\n    headers?: any,\n    body?: any,\n    mode?: string, // not yet supported\n    credentials?: {\n        username: string;\n        password?: string;\n    },\n    cache?: 'default' | 'no-store' | 'reload' | 'no-cache' | 'force-cache' | 'only-if-cached', // not yet supported\n    redirect?: 'follow' | 'error' | 'manual', // not yet supported\n    referrer?: string, // not yet supported\n    integrity?: string // not yet supported\n}\n\nexport class RequestService extends Service {\n\n    public fetch(url:string, options?:IRequestOptions):Promise<string> {\n        return new Promise((resolve:(result:any) => void, reject:(reason:Error) => void) => {\n            if (!options) {\n                options = {};\n            }\n\n            let xhr = new XMLHttpRequest();\n            let headers = options.headers;\n\n            // Check if method is GET and body ias an object\n            // If it is so, parse body object an append all properties as GET parameters to the url\n            if (options.method === 'GET' && options.body) {\n                if (typeof options.body === 'object') {\n                    let separator = '';\n                    let uri = '';\n                    for (var key in options.body) {\n                        if (options.body.hasOwnProperty(key)) {\n                            const encodedKey = encodeURIComponent(key);\n                            const encodedContent = encodeURIComponent(options.body[key]);\n                            uri += `${separator}${encodedKey}=${encodedContent}`;\n                            separator = '&';\n                        }\n                    }\n\n                    // append the parameters to the url\n                    url = url + (url.indexOf('?') === -1 ? '?' : '&') + uri;\n                } else {\n                    // Body is not an object => not allowed\n                    reject(new TypeError('Non object like body not allowed for GET requests. The body has to be an object so the properties will be appended as a GET parameter to the url.'));\n                    return;\n                }\n            } else if (typeof options.body !== 'string') {\n                // if body is not a string, parse it to a json string\n                options.body = JSON.stringify(options.body);\n            }\n\n            // Body not allowed for HEAD requests\n            if (options.method === 'HEAD' && options.body) {\n                reject(new TypeError('Body not allowed for HEAD requests'));\n                return;\n            }\n\n            // Add onload event listener\n            xhr.onload = (event:Event) => {\n                if (xhr.status >= 400 || xhr.status === 0) {\n                    reject(new Error(xhr.responseText));\n                } else {\n                    resolve('response' in xhr ? xhr.response : xhr.responseText);\n                }\n            };\n\n            // Add onerror event listener\n            xhr.onerror = (event:ErrorEvent) => {\n                reject(event.error);\n            };\n\n            xhr.onabort = (event:ErrorEvent) => {\n                reject(new TypeError('Network request aborted'));\n            };\n\n            // Add timeout event listener\n            xhr.ontimeout = (event:Event) => {\n                reject(new TypeError('Network request timed out'));\n            };\n\n            if (options.credentials && options.credentials.username) {\n                xhr.open(options.method ? options.method : 'GET', url, true, options.credentials.username, options.credentials.password);\n            } else {\n                xhr.open(options.method ? options.method : 'GET', url, true);\n            }\n\n            if (typeof headers === 'object') {\n                for (var key in headers) {\n                    if (headers.hasOwnProperty(key)) {\n                        xhr.setRequestHeader(key, (<any>headers)[key]);\n                    }\n                }\n            }\n\n            xhr.send(typeof options.body === 'undefined' ? null : options.body);\n        });\n    }\n\n    public fetchJSON(url:string, options?:IRequestOptions):Promise<Object | Array<any>> {\n        if (!options) {\n            options = {};\n        }\n        if (!options.headers) {\n            options.headers = {};\n        }\n        if (!options.headers['Content-Type']) {\n            options.headers['Content-Type'] = 'application/json';\n        }\n        return this.fetch(url, options).then(result => {\n            return JSON.parse(result);\n        });\n    }\n}\n","export enum ROOMLE_TYPE  {\n    ITEM,\n    CONFIGURATION,\n    PLAN,\n    CONFIGURABLE_ITEM\n}\n\n\nexport class RoomleTypeService {\n    // TYPES ARE FROM OUTSIDE CONVERT THEM TO ENUM BECAUSE \"item\" is nicer than \"0\"\n    static convertTypeToEnum(type:string):ROOMLE_TYPE {\n        if (type === 'item') {\n            return ROOMLE_TYPE.ITEM;\n        }\n\n        if (type === 'configuration') {\n            return ROOMLE_TYPE.CONFIGURATION;\n        }\n\n        if (type === 'plan') {\n            return ROOMLE_TYPE.PLAN;\n        }\n\n        if (type === 'configurable-item') {\n            return ROOMLE_TYPE.CONFIGURABLE_ITEM;\n        }\n        return null;\n    }\n\n    static convertRoomleType(type:ROOMLE_TYPE):string {\n        if (type === ROOMLE_TYPE.ITEM) {\n            return 'item';\n        }\n\n        if (type === ROOMLE_TYPE.CONFIGURATION) {\n            return 'configuration';\n        }\n\n        if (type === ROOMLE_TYPE.PLAN) {\n            return 'plan';\n        }\n\n        if (type === ROOMLE_TYPE.CONFIGURABLE_ITEM) {\n            return 'configurable-item';\n        }\n        return null;\n    }\n}\n","export type RoomleButtonModes  = 'lib' | 'button' | 'popup' | 'fullscreen';\n\ninterface DeepLinkTranslation {\n    heading: string,\n    [key: string]: any\n    hint: {\n        ios: string,\n        android: string,\n        desktop: string,\n        [key: string]: string\n    }\n}\n\nexport interface RoomleButtonSettings {\n    mode: RoomleButtonModes,\n    container: string,\n    selector: string,\n    showOnlyTrigger: boolean,\n    createNoButtons: boolean,\n    typeSelector: string,\n    idSelector: string,\n    [key: string]: any;\n    planId: string;\n    createPopUp: boolean,\n    showBackButton: boolean,\n    popUpSelector: string,\n    translations: {\n        ar: DeepLinkTranslation,\n        add: DeepLinkTranslation,\n        configure: DeepLinkTranslation,\n        mark: DeepLinkTranslation,\n        trigger: DeepLinkTranslation,\n        visualize: DeepLinkTranslation,\n        vr: DeepLinkTranslation,\n        errors: {\n            deeplinkcreate: string,\n            [key: string]: string\n        },\n        [key: string]: any\n    },\n    web: {\n        baseUrl: string,\n        [key: string]: string\n    },\n    viewr: {\n        baseUrl: string,\n        [key: string]: string\n    },\n    ios: {\n        baseUrl: string,\n        [key: string]: string\n    },\n    dataSelector: {\n        type: string,\n        id: string,\n        action: string,\n        [key: string]: string\n    },\n    html: {\n        containerClass: string,\n        containerType: string,\n        buttonsContainer: string,\n        buttonElement: string,\n        [key: string]: string\n    },\n    css: {\n        buttons: {\n            position:string,\n            top:string,\n            right: string,\n            'line-height': string,\n            [key: string]: string;\n        },\n        item: {\n            position: string,\n            [key: string]: string;\n        }\n    },\n    callback:{\n        item: {\n            [key: string]: (id:string) => any   // return type is not restricted at all (could be any value, or even void)\n        },\n        configuration: {\n            [key: string]: (id:string) => any   // return type is not restricted at all (could be any value, or even void)\n        },\n        plan: {\n            [key: string]: (id:string) => any   // return type is not restricted at all (could be any value, or even void)\n        },\n        button: {\n            [key: string]: (id:string, roomleType:string, buttonType:string) => any   // return type is not restricted at all (could be any value, or even void)\n        },\n        popupOpen:Function,\n        popupClose: Function\n        booted: Function,\n        closed: Function,\n        clickedHint: Function,\n        [key: string]: any\n    }\n}\nexport class SettingsService {\n\n    public settings:RoomleButtonSettings;\n\n    private static _instance:SettingsService;\n\n    static setDefault(settings:RoomleButtonSettings, key:string, defaultValue:any) {\n        let toCheck = settings;\n        let keys = key.split('.');\n        let keysLength = keys.length - 1; // LAST ONE IS SET OUTSIDE THE LOOP\n        for (let i = 0; i < keysLength; i++) {\n            if (!toCheck[keys[i]]) {\n                toCheck[keys[i]] = {};\n            }\n            toCheck = toCheck[keys[i]];\n        }\n        if (toCheck[keys[keysLength]] === undefined) {\n            toCheck[keys[keysLength]] = defaultValue;\n        }\n    }\n\n    static setDeeplinkTranslation(settings:RoomleButtonSettings, linkType:string, translation:DeepLinkTranslation) {\n        SettingsService.setDefault(settings, 'translations.' + linkType + '.heading', translation.heading);\n        SettingsService.setDefault(settings, 'translations.' + linkType + '.hint.ios', translation.hint.ios);\n        SettingsService.setDefault(settings, 'translations.' + linkType + '.hint.android', translation.hint.android);\n        SettingsService.setDefault(settings, 'translations.' + linkType + '.hint.desktop', translation.hint.desktop);\n    }\n\n    static init(settings:RoomleButtonSettings):SettingsService {\n        if (!(this._instance instanceof SettingsService)) {\n            SettingsService.setDefault(settings, 'web.baseUrl', 'https://www.roomle.com/app/');\n            SettingsService.setDefault(settings, 'viewr.baseUrl', 'https://www.roomle.com/');\n            SettingsService.setDefault(settings, 'ios.baseUrl', 'https://www.roomle.com/');\n            SettingsService.setDefault(settings, 'dataSelector.type', 'data-rml-type');\n            SettingsService.setDefault(settings, 'dataSelector.id', 'data-rml-id');\n            SettingsService.setDefault(settings, 'dataSelector.action', 'data-rml-action');\n\n            SettingsService.setDefault(settings, 'planId', '8a708083560ca6cf01560cd7361a014a');\n            SettingsService.setDefault(settings, 'createPopUp', true);\n            SettingsService.setDefault(settings, 'showBackButton', true);\n\n            SettingsService.setDefault(settings, 'html.containerClass', 'roomle-buttons');\n            SettingsService.setDefault(settings, 'html.containerType', 'div');\n            SettingsService.setDefault(settings, 'html.buttonsContainer', 'ul');\n            SettingsService.setDefault(settings, 'html.buttonElement', 'li');\n\n            SettingsService.setDefault(settings, 'css.buttons.position', 'absolute');\n            SettingsService.setDefault(settings, 'css.buttons.top', '0');\n            SettingsService.setDefault(settings, 'css.buttons.right', '0');\n            SettingsService.setDefault(settings, 'css.buttons.line-height', 'normal');\n            SettingsService.setDefault(settings, 'css.buttons.visibility', 'visible !important');\n\n            SettingsService.setDefault(settings, 'css.item.position', 'relative');\n\n            SettingsService.setDefault(settings, 'callback', {});\n            SettingsService.setDefault(settings, 'callback.button', {});\n            SettingsService.setDefault(settings, 'popUpSelector', 'data-rml-deeplink-popup-container');\n            SettingsService.setDefault(settings, 'callback.booted', ()=> {\n            });\n\n            SettingsService.setDefault(settings, 'translations.errors.deeplinkcreate', 'Error creating deeplink');\n\n            const hint = '';//'This feature is not available on your platform. ';\n            const androidHint = hint + 'Enter the following link into the browser of your desktop device';\n            const iosHint = hint + 'Enter the following link into the browser of your iOS device';\n            this.setDeeplinkTranslation(settings, 'ar', {\n                heading: 'Visualize in AR',\n                hint: {ios: iosHint, android: null, desktop: null}\n            });\n            this.setDeeplinkTranslation(settings, 'add', {\n                heading: 'Add to plan',\n                hint: {ios: null, android: null, desktop: androidHint}\n            });\n            this.setDeeplinkTranslation(settings, 'configure', {\n                heading: 'Customize',\n                hint: {ios: null, android: null, desktop: androidHint}\n            });\n            this.setDeeplinkTranslation(settings, 'mark', {\n                heading: 'Favourite',\n                hint: {ios: null, android: null, desktop: null}\n            });\n            this.setDeeplinkTranslation(settings, 'trigger', {\n                heading: 'Trigger',\n                hint: {ios: null, android: null, desktop: null}\n            });\n            this.setDeeplinkTranslation(settings, 'visualize', {\n                heading: 'Visualize',\n                hint: {ios: null, android: androidHint, desktop: null}\n            });\n            this.setDeeplinkTranslation(settings, 'vr', {\n                heading: 'View in VR',\n                hint: {ios: iosHint, android: '', desktop: ''}\n            });\n            this.setDeeplinkTranslation(settings, 'start_now', {\n                heading: 'Start planning now',\n                hint: {ios: iosHint, android: '', desktop: ''}\n            });\n\n            this._instance = new this(settings);\n        }\n        return this._instance;\n    }\n\n    static getInstance():SettingsService {\n        return this._instance;\n    }\n\n    constructor(settings:RoomleButtonSettings) {\n        this.settings = settings;\n    }\n\n    static get settings() {\n        return SettingsService.getInstance().settings;\n    }\n\n\n}\n","export class EnumEx {\n    static getNamesAndValues(e: any) {\n        return this.getNames(e).map(n => { return { name: n, value: e[n] as number }; });\n    }\n\n    static getNames(e: any) {\n        return this.getObjValues(e).filter(v => typeof v === 'string') as string[];\n    }\n\n    static getValues(e: any) {\n        return this.getObjValues(e).filter(v => typeof v === 'number') as number[];\n    }\n\n    private static getObjValues(e: any): (number | string)[] {\n        return Object.keys(e).map(k => e[k]);\n    }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}